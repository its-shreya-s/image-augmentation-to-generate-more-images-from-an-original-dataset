# -*- coding: utf-8 -*-
"""GAN for image augmentation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Uh3sFlDl3Y6wuosgyYqf8Sse491g7Yqj
"""

# GITHUB: https://github.com/its-shreya-s

"""This is a simple but useful code to perform image augmentation to generate more images than present in the original dataset for image related tasks like binary classification."""

import os
import numpy as np
import matplotlib.pyplot as plt
from keras.preprocessing.image import ImageDataGenerator, array_to_img, img_to_array, load_img

# Directory containing the original images
original_dataset_dir = ''

# Directory to save the augmented images
augmented_dataset_dir = ''

# Ensure the directory for augmented images exists
os.makedirs(augmented_dataset_dir, exist_ok=True)

# Create an ImageDataGenerator instance for data augmentation
datagen = ImageDataGenerator(
    rotation_range=40,
    width_shift_range=0.2,
    height_shift_range=0.2,
    shear_range=0.2,
    zoom_range=0.2,
    horizontal_flip=True,
    fill_mode='nearest'
)

# Load each original image, perform data augmentation, and save the augmented images
for i, filename in enumerate(os.listdir(original_dataset_dir)):
    img = load_img(os.path.join(original_dataset_dir, filename))  # Load image
    x = img_to_array(img)  # Convert to NumPy array
    x = x.reshape((1,) + x.shape)  # Reshape to (1, height, width, channels)

    # Generate augmented images and save to disk
    j = 0
    for batch in datagen.flow(x, batch_size=1, save_to_dir=augmented_dataset_dir, save_prefix='cashew', save_format='jpeg'):
        j += 1
        if j >= 8:  # Generate 8 augmented images per original image
            break

print("Augmentation complete")